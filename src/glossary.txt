title: Glossar für IVC und BV1
author: Konstantin Möllers
---
1. Ableitung: => Steigung
2. Ableitung: => Krümmung
4-Nachbarschaft: #BV1 !4nei
	umfasst alle vier direkt anschließenden => Pixel.

8-Nachbarschaft: #BV1 !8nei
	umfasst alle vier direkt anschließenden => Pixel sowie die diagonal anliegenden.

Abgrenzungen: #BV1 !boundaries
	stellen eine Herausforderung der => Bildsegmentierung dar. Bei einer => 8-Nachbarschaft
	können diese anders ausfallen als bei einer => 4-Nachbarschaft. Äußere abgrenzende
	=> Pixel sind in der Regel im Uhrzeigersinn angeordnet während innere gegen den
	Uhrzeigersinn geordnet sind.

Abstand: #Math #BV1
	ist die Entfernung zwischen zwei Punkten mit Koordinaten $(i,j)$ und $(h,k)$. Es
	gibt den => Euklidischen{ }[ ]Abstand, die => Manhattan-Distanz und die => Schachbrett-Distanz.

Abstraktionslevel: #BV1
	bestehen aus Wissenslevel, algorithmischem Level und Implementationslevel.

Aliasing: => Treppeneffekt
Antialiasing-Filter: #IVC
	ist (in der Regel) ein => Tiefpassfilter, welcher den => Treppeneffekt eines Bildes
	reduziert. Ein Tiefpassfilter reduziert die harten Kanten zwischen Pixeln. Dadurch
	erscheint es insgesamt weicher und natürlicher.

Approximation: #BV1 #Math
	ist ein Verfahren, bei dem versucht wird, eine Funktion zu finden, die alle gegebenen
	Punkte annähernd verbindet. Die Funktion wird mithilfe eines => MSE berechnet. Es
	ist eine Alternative zu => Interpolation.

Arkustangens mit 2 Argumenten: #Math #BV1 !atan2
	wird vom => Canny-Edge-Detector benötigt, um korrekte Winkel zu einer => Steigung
	$\frac{x}{y}$ auszurechnen.

assoziativ: => Assoziativgesetz
Assoziativgesetz: #Math
	gilt, wenn die Reihenfolge der Ausführung einer Operation $\times$ keine Rolle spielt,
	also $(a \times b) \times c = a \times (b \times c)$.

atan2: => Arkustangens mit 2 Argumenten
Aufgabenorientierung: #BV1
	meint Aktionen, die zum erfüllen einer bestimmten Aufgabe existieren.

Bandbreite: => Grenzfrequenz
Bandpassfilter: #BV1
	lässt einen bestimmten Bereich von Frequenzen durch, => {Filter}[filtert] allerdings
	höhere oder tiefere Signale weg.

Beidäugiges Stereo: #BV1 !binocular
	ist ein Prinzip, bei welchem zwei Kameras eine => Szene aufnehmen. Damit können
	wir es erreichen, dass wir eine => {Inverse Perspektivische Gleichungen}[inverse
	perspektivische Gleichung] aufstellen können.

Bikubische Interpolation: #BV1 !bicubic
	jeder Grauwert an einem Rasterpunkt wird genommen um den Wert des Zentrums einer
	lokalen bikubischen Interpolationsoberfläche mit => Querschnitt $h_3$ zu repräsentieren.

Bild: #BV1 #IVC
	ist Sicht einer => Szene.

Bildanalyse: #BV1
	ist das Berechnen von Bildkomponenten und deren Eigenschaften, z.B. => Bildsegmentierung,
	=> Objektlokalisierung, => {Motion Tracking}.

Bildelemente: #BV1
	sind das Produkt der => Bildsegmentierung und Edukt der Gruppierung und des Suchens.
	Sie können ganze => Objekte sein, => Kanten[linien]{erkennung} oder Kantelemente,
	Vertixe

Bilder pro Sekunde: #BV1 #IVC
	ist ein Maß für die Bildrate eines Films oder einer Fernsehübertragung.

Bildformate: #IVC #BV1
	aus der Vorlesung: => {Binärbild}[binär], graustufig und farbig (also multi=> {Spektrum}[spektral]).

Bildformation: #BV1 !formation
	beschreibt die Ermittlung von Bildern, z.B. => {Natürliche Bilder}

Bildrate: => Bilder pro Sekunde
Bildrestauration: #BV1 !imagerestau
	kann durch Minimieren des => MSE durchgeführt werden. Dazu verwenden wir eine Pseudoinverse
	$(H^T H)^{-1} H^T$, welche den Filter $H$ ausgleichen soll, der das Bild primär
	zerstört hat. Ist $H$ sogar invertierbar, kann gleich $H^{-1}$ verwendet werden.

Bildsegmentierung: #BV1
	ist eine Disziplin der => Bildverarbeitung, bei der versucht wird, aus rohen => Bild[ern]
	=> Bildelemente abzuleiten.<p/>Siehe => Thresholding, => Kantenerkennung.

Bildverarbeitung: #BV1 #IVC
	beschreibt die Aufgabe, Informationen aus einem Bild zu berechnen und in ein maschinenlesbares
	Format zu überführen.

Bildverstehen: #BV1 !process
	ist das Berechnen der Bedeutung von Bildern, z.B. => Objekterkennung, => Szeneninterpretation
	und der => {Natürlichsprachliche Beschreibung}[natürlichsprachlichen Beschreibung].

Bimodale Durchschnittberechnung: #BV1 #IVC
	vermeidet eine => Durchschnittberechnung über Kanten hinaus. Dazu wird entweder
	mithilfe einer *=> Rotierende{ }[n ]Maske* oder eines *Median* gemittelt.

Binarisieren: #BV1 #IVC
	beschreibt den Vorgang, bei welchem aus einem graustufigen Bild ein reines => Schwarz-Weiß-Bild
	gewonnen wird. Beispielsweise wird ein Objekt von einem Hintergrund getrennt. Um
	das Ziel zu erreichen wird ein => Schwellwert gewählt. Alle Grauwerte unter diesem
	weden zu 0 und alle anderen zu 1 ausgewertet.

Canny-Edge-Detector: #BV1 #IVC #Wichtig !cannyedge
	ist ein in der digitalen Bildverarbeitung weit verbreiteter, robuster Algorithmus
	zur => Kantenerkennung. Er gliedert sich in verschiedene => Faltung[soperationen]
	und liefert ein => Bild, welches idealerweise nur noch die Kanten des Ausgangsbildes
	enthält. <p/> Das Verfahren nutzt u.a. den => Sobel-Operator und die => {Non-Maximal
	Suppression} aus, um eindeutige Maxima zu erhalten. <p/> Durch => Hysterese wird
	ein Parameter $\sigma$ empirisch ermittelt, welcher die besten Kanten ermittelt.

Chain Code: => Freeman-Code
CMYK: 
	ist ein => Druck-Farbmodell{e}, bestehend aus den => Spektr{um}[en] Cyan (C), Magenta
	(M), Gelb (Y) und Schwarz (K).

Computer Vision: => Maschinensehen
Cooley & Tukey Decomposition: => Fast Fourier-Transform
Cross-Section: => Querschnitt
Curvature: => Krümmung
DCT: #BV1
	steht für Diskrete => Kosinustransformation.

DFT: #BV1
	steht für Diskrete => Fourier-Transformation.

Difference of Gaussians: #BV1 #Math !dog
	(DoG) nähert den Laplacian of Gaussian mithilfe der Differenz von zwei Gauß-Funktionen
	an.

Dilatation: #BV1 !erosiondilation !catimagelol
	umrahmt das Äußere einer Form. Es entspricht einer *ODER*-Operation mit einem Strukturelement.
	Der Gegensatz dazu ist => Erosion.

Diskretisierung: #Math
	beschreibt den mathematischen Prozess der Überführung von kontinuierlichen Werten
	in diskrete (endliche, abzählbare) Bereiche.

distributiv: => Distributivgesetz
Distributivgesetz: #Math
	gilt, wenn zwei Verknüpfungen $+$ und $\cdot$ miteinander verträglich sind, und
	zwar wenn $a \cdot (b + c) = (a \cdot b) + (a \cdot c)$ gilt.

DoG: => Difference of Gaussians
Druck-Farbmodelle: 
	sind => Farbmodelle, die extra für Druckmedien geschaffen wurden. Dies ist durch
	den weißen Hintergrund erforderlich. Das bekannteste Modell ist => CMYK.

Durchschnittberechnung: #BV1 !averaging
	kann mihilfe einer Maske berechnet werden. Siehe auch => {Einfache Glättung}.

Eigenfaces: => Eigengesichter
Eigengesichter: #BV1 !eigenfaces
	sind => Eigenvektor[en] einer => Kovarianzmatrix von normalisierten Gesichtsabbildungen.

Eigenvektor: #Math #BV1
	einer Abbildung ist in der linearen Algebra ein vom Nullvektor verschiedener Vektor,
	dessen Richtung durch die Abbildung nicht verändert wird.

Einfache Glättung: #BV1
	ist eine Operation bei der entweder 1. eine *=> Durchschnittberechnung durchgeführt*,
	2. *Ausreißer entfernt* oder 3. ein *gewichteter Durchschnitt* bestimmt wird.

Einheitlichkeitsvermutung: #BV1
	besagt, dass bedeutungsvolle => Objekte in => Regionen zusammen gehören oder durch
	durch => Kanten{erkennung} voneinander getrennt sind.

Empirischer Mittelwert: #Math !mean
	ist der Durchschnitt aller => Pixel eines => Bild[es].

Empirische Varianz: #Math !variance
	ist der Durchschnitt aller quadratischen Abweichungen von allen => Pixel[n] zum =>
	{Empirischer }Mittelwert.

Entropie: #BV1
	einer Pixelquelle ist die durchschnittliche Anzahl an Bits, die benötigt werden,
	um die Information ihrer Quelle zu speichern.

Erosion: #BV1 !erosiondilation !catimagelol
	trägt das Innere einer Form ab. Es entspricht einer *UND*-Operation mit einem Strukturelement.
	Der Gegensatz dazu ist => Dilatation.

Euklidischen Abstand: #Math #BV1
	$D_E((i,j),(h,k)) = \sqrt{(i - h)^2 + (j - k)^2}$, ist kostenaufwändig wegen der
	Wurzel. Kann bei Entfernungsbestimmungen vermieden werden.

Eulersche Formel: #BV1 #IVC #Math
	besagt, dass $e^{ix} = \cos(x) + i \sin(x)$.

Faltung: #BV1 #Math
	ist eine mathematische Operation, bei der zwei Funktionen miteinander überlagert
	werden. Sie ist wichtig um lineare Operationen wie => Filter zu beschreiben.<p/>Formel
	für 1D: $(f \ast g)(x) = \int\limits_{-\infty}^\infty f(r) \cdot g(x - r)\; dr$<p/>Formel
	für 2D: $(f \ast g)(x) = \int\limits_{-\infty}^\infty \int\limits_{-\infty}^\infty
	f(r, s) \cdot g(x - r, y - s)\; dr\, ds$<p/>Die Faltung ist => assoziativ, => kommutativ
	und => distributiv. Außerdem gibt es das Gesetz der *Dualität* der Faltung zur
	=> Fourier-Transformation, sodass eine Faltung zweier Funktionen der => Raumdomäne
	gleich der Multiplikation in der => Frequenzdomäne ist.

Farbmodelle: #BV1 #IVC
	die in der Vorlesung behandelt wurden: => HSB, => RGB, => YUV, => {NCS*} und => HSI.
	Außerdem gibt es die => Subtraktive{ }[ ]Farbmischung und => Additive{ }[ ]Farbmischung.

Fast Fourier-Transform: #BV1
	(nicht im Detail lernen!) ist eine Umformung der => Fourier-Transformation nach Cooley
	und Tukey aus dem Jahr 1965. Dabei werden die Koeffizienten in gerade und gerade
	Teile getrennt und anschließend eine Dekompisation im Frequenzraum durchgeführt,
	sodass nur $\frac{N}2$ Berechnungen durchgeführt werden müssen.

FFT: => Fast Fourier-Transform
Filter: #BV1 #IVC #Wichtig
	lassen nur bestimmte Frequenzen eines Signals passieren. Sie können mithilfe einer
	=> Faltung auf eine Bildfunktion angewendet werden. Typische Filter sind der => Tiefpass{filter}[-],
	=> Hochpass{filter}[-] und => Bandpassfilter.

Form-konservierendes Abtasttheorem: #BV1 !shapepreserving !arbitraryrshape
	(Shape-preserving Sampling of Binary Images) kann durch das Anlegen von Kreisen mit
	Radius $r$ auf binäre Bilder erreicht werden. One shape can be mapped onto the other
	by twisting the whole plane, such that the displacement of each point is smaller
	than r. Dieses Theorem kann auch auf graustufige Bilder erweitert werden, wie die
	untenstehende Grafik zeigt. Siehe auch => {Shannons Abtasttheorem}.

Fourierspektrum: #IVC #BV1
	ist die Länge $|G(u,v)|$ eines Frequenzwertes, welcher mit einer => Fourier-Transformation
	erstellt wurde. <p/> Es gilt: $|G(u,v)| = \sqrt{\Re\{G(u,v)\}^2 + \Im\{G(u,v)\}^2}$

Fourier-Transformation: #BV1 #IVC
	(FT) wandelt die Intensitätswerte eines => Bild[es] in Frequenzen um. Für den diskreten
	Fall ist die Formel:<p/>$G_{uv} = \frac1{MN} \sum\limits_{m = 0}^{M - 1} \sum\limits_{n
	= 0}^{N - 1} g_{mn} e^{-2\pi i \left(\frac{mu}{M} + \frac{nv}{N}\right)}$<p/>Die
	FT macht aus einem diskreten Signal ein kontinuierliches, welches erneut => {Quantisierung}[quantisiert]
	werden kann. Die FT ist *linear*, d.h. $F(a \cdot g + b \cdot h) = a \cdot F(g) +
	b \cdot F(h)$ und *symmetrisch*, d.h. $G_{-u, -v} = G_{u,v}$. Siehe dazu auch die
	=> {Eulersche Formel}.

Freeman-Code: => Kettencode
Frequency Domain: => Frequenzdomäne
Frequenzdomäne: #BV1
	meint das Vorliegen einer => Bild[funktion] als Sammlung von Fourier-Komponenten
	mit reellem und imaginärem Anteil. Mithilfe einer inversen => DFT kann sie in die
	=> Raumdomäne gebracht werden.

Frequenz-Spektrum: => Fourierspektrum
Gauß-Filter: #BV1 !gaussfilter
	werden zur Glättung oder Weichzeichnen des Bildinhaltes verwendet. Es kann damit
	das Bildrauschen vermindert werden: Kleinere Strukturen gehen verloren, gröbere
	Strukturen bleiben dagegen erhalten. Spektral kommt die Glättung einem => Tiefpassfilter
	gleich.

Gauß'sche Wahrscheinlichkeitsdichte: #Math !gauss
	ist eine => Wahrscheinlichkeitsdichte für Standardnormalverteilungen.

Generalized Cylinders: #BV1
	sind ein Verfahren, bei welchem ein Kreis oder eine andere Form entlang einer Linie
	geführt werden, um dadurch die Konturen einer Form zu erfassen.

Gerade Linien in diskreter Darstellung: #BV1 !straightlines
	stellen eine Herausforderung dar, da diagonale Linien nur durch Treppen dargestellt
	werden können. Es sind im => Kettencode dabei nur zwei Elementtypen erlaubt, die
	Differenz der Elementtypen beträgt höchstens 1 und eines der Elementtypen taucht
	nicht permanent auf sondern nur in möglichst regelmäßigen Abständen.

Gradientenoperator: #BV1 #IVC
	findet Differenzen zwischen einzelnen => Pixel[n].

Grauwert-Unterbrechungen: #BV1 !grayvaldisc
	sind ein gängiges Mittel um => Kanten[ zu erkennen]{erkennung}. Kanten sind oftmals
	dort, wo die => {1. Ableitung} maximal und die => {2. Ableitung} eine Nullstelle
	hat.

Grenzfrequenz: #BV1 #IVC
	ist die höchste Frequenz, für die das => Fourierspektrum der => Bild[funktion]
	verschieden von Null ist. Diese ist beim Digitalisieren des Bildes aufgrund des =>
	{Shannons }Abtasttheorem[s] zu beachten: der Abstand der Abtaststellen muss mindestens
	doppelt so hoch sein, wie die Grenzfrequenz vorgibt, sonst entstehen Scheinfrequenzen.

Hauptkomponentenanalyse: => Karhunen-Loève-Transformation
Helligkeit: #BV1 #IVC
	ist ein Überbegriff subjektiver Eindrücke und objektiver Messgrößen für die
	Stärke einer visuellen Wahrnehmung von sichtbarem Licht.

Hexagonale Raster: #BV1 !hexag
	ist ein => Raster mit sechseckigen => Pixel[n].

Histogramm: #BV1 !histogramm
	$h_f(z)$ eines => Bild[es] $f$ stellt die Frequenzen eines Grauwertes $z$ eines =>
	Bild[es] dar. Es wird als 1D-Array mit $N$ Elementen dargestellt, wenn das Bild über
	$N$ => Quantisierung[en] verfügt.

Histogramm-Angleichung: #BV1 !histoeq
	modifiziert das => Histogramm so, dass es alle Grauwerte den gleichen Wert aufweisen.

Histogramm-Projektionen: #BV1
	erstellen Profile pro Zeile und Spalte. Dafür werden alle Grauwerte der Zeile bzw.
	Spalte aufsummiert, sodass man ein => Histogramm für die vertikale bzw. horizontale
	Verteilung erhält.

Hochpassfilter: #BV1
	lässt hohe Frequenzen durch, => {Filter}[filtert] allerdings tiefe Signale weg.

Homogene Koordinaten: #BV1 #IVC
	ergänzen in 3D die Vektoren um eine vierte, bei 2D um eine dritte $w$-Koordinate,
	durch die alle weiteren Koordinaten geteilt werden (z.B. Rot entspricht $\frac{r}{w}$).<p/>
	Mit diesen können sowohl die => {Perspektische Projektionstransformation} als auch
	=> {Affine }[affine ]Koordinaten-Transformationen umgesetzt werden.

Hotelling Transform: => Karhunen-Loève-Transformation
Hough-Transformation: #BV1 #Wichtig
	ist ein robustes globales Verfahren zur Erkennung von Geraden, Kreisen oder beliebigen
	anderen parametrisierbaren geometrischen Figuren in einem binären Gradientenbild,
	also einem => Schwarz-Weiß-Bild, nach einer => Kantenerkennung.

HSB: #BV1 !hsb
	(=> Farbmodell{e}) steht für Farbwert (Hue), Sättigung (Saturation) und => Helligkeit
	(Brightness); siehe auch => HSI.

HSI: #BV1
	(=> Farbmodell{e}) steht für Farbwert (Hue), Sättigung (Saturation) und Intensität
	(Intensity); siehe auch => HSB.

HSV: => HSI
Huffman-Kodierung: #BV1 !huffman
	ist eine => {V}[v]erlustfreie{ }[ ]Kompression, welche die Informationen entsprechend
	der Häufigkeit ihres Auftretens abspeichert.

Hysterese: #BV1
	beschreibt das Erlesen eines => Schwellwert[s], der für ein => Bild die optimalen
	Kanten für den => Canny-Edge-Detector liefert.

Intensität von Sensorsignalen: #BV1
	ist abhängig von Ort auf der Sensorebene, der Zeit, der Frequenz des eingehenden
	Lichts und der spektralen Sensitivität des Sensors.

Interpolation: #BV1 #Math
	ist ein Verfahren, bei dem versucht wird, eine Funktion zu finden, die durch alle
	gegebenen Punkte verläuft. Es ist eine Alternative zu => Approximation.

Inverse Perspektivische Gleichungen: 
	sollen die Frage lösen, ob aus Bildkoordinaten wieder Weltkoordinaten gewonnen werden
	können.

JPEG: #BV1 #Wichtig
	ist ein => Bildformat{e} und steht für „Joint Photographic Expert Group“. Es
	wird berechnet, indem eine Umwandlung in den => YUV[-Farbbereich] erfolgt, eine =>
	DCT angewandt, eine Reduktion durch => Quantisierung erwirkt und eine => Huffman-Kodierung
	durchgeführt wird.

Karhunen-Loève-Transformation: #BV1 #Wichtig !karhunen !karhunenex
	ist ein Verfahren zur => {V}[v]erlustbehaftete{ }[n ]Kompression der multivariaten
	Statistik. Sie dient dazu, umfangreiche Datensätze zu strukturieren, zu vereinfachen
	und zu veranschaulichen, indem eine Vielzahl statistischer Variablen durch eine geringere
	Zahl möglichst aussagekräftiger Linearkombinationen (die „Hauptkomponenten“)
	genähert wird.<p/>Das Verfahren funktioniert so, dass zu einem Datensatz die Eigenvektoren
	und Eigenwerte berechnet werden, um die Komponenten zu finden, welche die größte
	Auswirkung haben. Die Komponente mit der geringsten Auswirkung wird entfernt um die
	gesamte Komplexität zu reduzieren.

Kettencode: #BV1 !chaincode
	ist ein gegen den Uhrzeigersinn formulierter Code, welcher die (Himmels)-Richtungen
	unterscheidet. Im Falle einer => 8-Nachbarschaft ist „Ost“ kodiert mit 0, „Nordost“
	mit 1 usw. bis „Südost“ mit 7. Der Codename leitet sich daher ab, dass die Darstellung
	üblicherweise in Form von Pfeilketten erfolgt.

Kirsch-Operator: #IVC #BV1
	berechnet die => Steigung auf Basis einer 3×3-Nachbarschaft, die in 45° Schritten
	konstruiert wird.

Klique: #Math
	ist ein vollständiger Subgraph.

Kognitionswissenschaft: #BV1
	ist eine biologische Disziplin um mithilfe empirischer Modelle biologisches Sehen
	zu beschreiben. Es ist ein Interessensgebiet des => Maschinensehen[s].

kommutativ: => Kommutativgesetz
Kommutativgesetz: #Math
	gilt, wenn die Argumente einer Operation vertauscht werden können.

Komplementärfarben: #IVC !komplementaer
	ist ein Begriff aus der Farbenlehre. Sowohl der => {A}[a]dditive[n]{ Farbmischung}
	als auch bei der => {S}[s]ubtraktive[n]{ Farbmischung} Farbmischung gelten diejenigen
	Farben als komplementär, die miteinander gemischt einen neutralen Grauton ergeben.

Kompression: #BV1 #Wichtig
	versucht Daten in ihrer Größe zu optimieren. Sie kann => {V}[v]erlustfrei{e Kompression}
	oder => {V}[v]erlustbehaftet{e Kompression} sein.

Konnektivität: #BV1
	beschreibt, ob => Pixel zusammenhängen. Primär gibt es => 4-Nachbarschaft und =>
	8-Nachbarschaft.

Koordinaten-Transformationen: #BV1 #IVC
	aus IVC und BV1: => Rotation, => Skalierung, => Translation und => Scherung. Diese
	sind auch alle => {Affine Koordinaten-Transformationen}[affin].

Korrelation: #BV1 #Math !korrelation
	ist eine mathematische Operation, bei der, ähnlich der => Faltung, zwei Funktionen
	miteinander überlagert werden.<p/>Formel für 1D: $(f \circ g)(x) = \int\limits_{-\infty}^\infty
	f(r) \cdot g(r - x)\; dr$<p/>Formel für 2D: $(f \circ g)(x) = \int\limits_{-\infty}^\infty
	\int\limits_{-\infty}^\infty f(r, s) \cdot g(r - x, s - y)\; dr\, ds$<p/>Mithilfe
	von Korrelationen lassen sich Teil-Bildelemente in einem ganzen wiederfinden.<p/>Korrelation
	kann mithilfe von komplexen Konjugierten auch dual über die => Fourier-Transformation
	angewandt werden.

Kosinustransformation: #BV1 !dct
	wird hauptsächlich für => JPEG und andere => {V}[v]erlustbehaftete{ }[ ]Kompression[en]
	verwendet und funktioniert ähnlich der => Fourier-Transformation, allerdings werden
	nur Kosinus-Werte gespeichert. Dies hat den Vorteil, dass der Imaginärteil der komplexen
	Zahlen der FT wegfallen und es zu keinen Wrap-Around-Fehlern kommt.

Kovarianzmatrix: #BV1
	$V$ eines => Bild[es] muss empirisch bestimmt werden. Es werden mehrere Bilder $M$
	des gleichen Formats und der gleichen Größe $N$ eines Motivs oder einer => Szene
	aufgenommen und untersucht. Man bildet für jedes Bild einen Spaltenvektor, welcher
	aus $N$ Einträgen besteht. Man reiht diese Spaltenvektoren zu einer Matrix $T_{M,
	N}$ an. Die Kovarianzmatrix ergibt sich dann zu $V = T T^T$.

Krümmung: #Math
	ist der Abstand der => Steigung eines Signals zur nächsten Stelle. Bei einer Funktion
	ist dies die 2. Ableitung.

k-Steigung und k-Krümmung: #BV1 !kchain
	sind Gegenstände für ein Verfahren zur Glättung eines => Kettencode[s]. Die rechte
	$k$-Steigung betrachtet die Gesamtsteigung für die nächsten $k$ Kettencodeelemente,
	die linke äquivalent für die letzten $k$. Die $k$-Krümmung wird bestimmt indem
	die linke $k$-Steigung von der rechten abgezogen wird. (Eine Annhährung für die
	=> {2. Ableitung} also!)

Laplace-Operator: #IVC #BV1 !laplace
	ist anfällig gegenüber => [Bildr]{R}auschen. Er berechnet die => Krümmung auf
	Basis vierer Differenzen.

Laplacian of Gaussian: #BV1
	(LoG) ist die Formel $\nabla^2(f(x, y, \sigma) \ast g(x, y)) = \nabla^2(f(x, y, \sigma))
	\ast g(x, y) = h(x, y) \ast g(x, y)$, wobei $f(x, y, \sigma) = e^{- \frac{x^2 + y^2}{2\sigma^2}}$,
	also ein => Gauß-Filter, ist. Eine Annäherung des LoG kann durch die => DoG erfolgen.

Lauflängenkodierung: #BV1 !rle
	speichert Informationen als Sammlung von Tupeln der Form (Information, Länge) ab.
	Wird nur bitweise kodiert, kann die Information weggelassen werden, sodass nur die
	Länge gespeichert werden muss. So wird aus 111110001111 die RLE 534.

LoG: => Laplacian of Gaussian
Lokale Nachbarschaftsoperationen: #BV1
	siehe => Durchschnittberechnung und => Schärfen.

Lossless Predictive Coding: #BV1 !loslesscoding
	ist ein => {V}[v]erlustfreie[s]{ Kompression} Verfahren bei welchem nicht die reinen
	Bilddaten sondern die Differenzen zu den benachbarten => Pixel[n] mit Nachbarschaftsgrad
	$K$ (die Prognose) zusätzlich der Prognoseoperation übertragen werden.<p/>Für
	bilder genügt meistens eine Nachbarschaft der Größe 3.

Lossy Prediction: #BV1 !lossypred
	ist ein => {V}[v]erlustbehaftete[s]{ Kompression} Verfahren bei welchem die Prognose
	des => {Lossless Predictive Coding} noch zusätzlich => quantisiert wird.

Manhattan-Distanz: #Math #BV1
	$D_4((i,j),(h,k)) = |i - h| + |j - k|$, wie viele horizontale und vertikale Blöcke
	muss ich laufen? Siehe => 4-Nachbarschaft.

Marr-Hildreth-Operator: #BV1
	wendet den => LoG an um anhand der => Krümmung => Kanten[ zu erkennen]{erkennung}.

Maschinensehen: #BV1
	beschreibt einen generelleren Begriff für das ganze Feld; beinhaltet => Bildverarbeitung,
	=> Bildanalyse und => Bildverstehen. Wie => Bildverarbeitung, nur in einer weiteren
	Bedeutung.

Maximum-Likelihood-Edge-Finding: #BV1
	ist ein statistisches Verfahren um => Kanten[ zu erkennen]{erkennung}. Es basiert
	auf der => Maximum-Likelihood-Methode.

Maximum-Likelihood-Methode: #Math
	(von engl. maximale Wahrscheinlichkeit) bezeichnet in der Statistik ein parametrisches
	Schätzverfahren. Dabei wird so vorgegangen, dass derjenige Parameter als Schätzung
	ausgewählt wird, gemäß dessen Verteilung die Realisierung der beobachteten Daten
	am plausibelsten erscheint.

Mexican Hat: => Laplacian of Gaussian
Mittelwert: => Empirischer Mittelwert
Morphologische Operationen: #BV1
	sind Operationen welche die Struktur betreffen und sind für verschiedene Disziplinen
	geeignet, insbesondere aber für die => Bildsegmentierung.<p/>Einige Operationen
	sind: => Dilatation, => Erosion sowie Opening (Erosion gefolgt von Dilatation) und
	Closing (Dilatation gefolgt von Erosion)

Moving Picture Experts Group: => MPEG
MPEG: #BV1
	ist ein => Kompression[sverfahren] für => Video[s]. Die Abkürzung steht für „Moving
	Picture Experts Group“. Es verwendet zeitliche => {Lossless Predictive Coding}[Prognoseverfahren]
	verwendet und der => DCT angewandt. Siehe auch => MPEG-7.

MPEG-7: #BV1 !mpeg7
	aus dem Jahre 2002 erlaubt zusätzlich zu => MPEG auch das Taggen von => Multimedia[-Inhalten]
	mit Beschreibungen.

MPEG-Kompression: => MPEG
MSE: #Math
	(Minimum Squared Error) steht für den kleinsten quadratischen Fehler. Er wird als
	statistisches Hilfsmittel eingesetzt.

Multimedia: #IVC #BV1
	ist ein Oberbegriff für => Bild, => Video und => Ton.

Multispektrale Bilder: 
	beinhalten mehrere => Spektr{um}[en], ein Beispiel ist => RGB.

Mustererkennung: #BV1
	beschreibt Objektklassifizierung basierend auf Vektoren. Es ist ähnlich zu => Bildanalyse,
	aber auch auf andere Modalitäten anwendbar.

Natürliche Bilder: #BV1 !natural
	werden durch Illuminierung einer Oberfläche und der Messung der entstehenden Reflektionen
	aufgenommen.

Natürlichsprachliche Beschreibung: #BV1
	ist das Schildern einer Situation in Prosa.

NCS*: !ncs
	ist ein => Farbmodell{e}, welches als Spindel dargestellt wird.

NMS: => Non-Maximal Suppression
Noise: => Rauschen
Non-Maximal Suppression: #BV1
	(NMS) ist ein Verfahren um nicht-minimale Punkte auszuschließen und die Maxima auf
	=> {P}[einp]ixel[große] Stellen zu reduzieren.

Object Recognition: => Objekterkennung
Optimale Quantisierung: #BV1 !optquanti
	*Annahme:* => Wahrscheinlichkeitsdichte für kontinuierliche Grauwerte und Nummern
	der Quantisierungsstufen N sind bekannt. <p/> *Ziel:* Minimiere den => MSE für die
	Quantisierung $d_q$ durch Wahl der optimalen Intervalgrenzen $z_n$ und optimalen
	diskreten Repräsentativen $q_n$. <p/> Lösung für optimale Quantisierung: $z_n
	= \frac12(q_{n-1} + q_n)\;\text{for } n = 1 \dots N - 1 \text{ when } p(z_n) > 0$.

PAL-Standard: #BV1
	ist ein TV-Signal mit Seitenverhältnis 3:4, 25 vollen => Bilder{ pro }[n pro ]Sekunde
	sowie 625 Reihen pro Bild, von denen nur 576 sichtbar sind. Die => Bandbreite beträgt
	5 MHz.

PCA: => Karhunen-Loève-Transformation
Perspektische Projektionstransformation: #BV1 #IVC !persptrans !projtrans
	ist eine Transformation in drei Schritten: Umwandlung der Weltkoordinaten in Kamerakoordinaten.
	Projektion der Kamerakoordinaten auf eine Bildebene. Umwandlung der Kamerakoordinaten
	auf Bildkoordinaten.

Perspektivische Projektionsgeometrie: !persprojgeo
	bewegt ein Element auf einer Bildebene entsprechend den Transformationen in einer
	Szene.

Photometrische Oberflächeneigenschaften: #BV1 !photosurprop
	die Möglichkeit einer Oberfläche um Licht zu reflektieren, gegeben durch die =>
	{Bidirektionale Reflektanz-Verteilungs-Funktion (BRDF)}.

Pixel: #BV1 #IVC
	ist eine Rasterelement eines gerasterten => Bild[es] (Picture Cell).

Progressive Kodierung: #BV1
	speichert erst ein Bild in seiner undetailliertesten Form ab und verfeinert danach
	erst Stückweise die Ergebnisse. Konkret werden also erst die niedrigsten Frequenzen
	der => Frequenzdomäne gesichert und aufsteigend sortiert folgen die höheren.

Quadtree: #BV1 !quadtree
	ist eine mögliche Implementierung der => Progressive[n ]{ }Kodierung, bei der ein
	=> Bild rekursiv in vier Teile geteilt wird. Ein Bild der Größe $N = 2K \times
	2K$ kann in vollständiger Quadtree-Aufteilung aus ca. $1.33 \cdot N$ Knoten bestehen.

quantisiert: => Quantisierung
Quantisierung: #BV1 #IVC
	ist die Umsetzung eines analogen Signals in ein digitales, bei der => {Diskretisierung}[diskretisiert]
	wird.

Quantisierung von Grauwerten: #BV1 !quantigray
	ist die => Quantisierung, bei der Grauwerte aus einem => {Diskretisierung}[diskreten]
	Wertebereich entnommen werden. Es werden typischerweise $2^x$ Quantisierungsstufen
	verwendet. Die Stufen können uniform verteilt werden, das heißt in linearen Abständen,
	oder auch in nichtlinearen Kurven, um z.B. niedrige Grauwerte besser unterscheiden
	zu können. Eine Logarithmische Kurve kommt der menschlichen => Helligkeit[swahrnehmung]
	recht nahe.

Querschnitt: #BV1
	eines Grauwert-Bildes ist ein Vektor aller => Pixel entlang einer geraden Linie,
	die man durch ein => Bild zieht.

Raster: 
	sind Einteilungen des Raums. Es gibt => {Rechteckige Raster}, => {Hexagonale Raster}
	und => {Trianguläre Raster}.

Raumdomäne: #BV1
	meint das Vorliegen einer => Bild[funktion] als 2D-Array von Intensitätswerten.
	Mithilfe einer => DFT kann sie in die => Frequenzdomäne gebracht werden.

Räumliche Quantisierung: #BV1
	ist die => Quantisierung einer Bildebene in ein 2D-Array von => Pixel[n].

Rauschen: #BV1 #IVC
	sind zusätzliche Störsignale, welche ein tatsächliches => Bild von einem idealen
	abweichen lassen. Es hat einen => {Empirischer }Mittelwert von 0, ist räumlich und
	zeitlich unkorreliert und hat eine => {Gauß'sche Wahrscheinlichkeitsdichte}. Rauschen
	kann durch => Durchschnittberechnung über den Raum oder die Zeit entfernt werden
	(ist allerdings nicht besonders gut, die Varianz vom Ursprung ist $\frac{\sigma^2}{K}$,
	wobei $\sigma$ die Varianz des Rauschens ist).

Rechteckige Raster: #BV1 !rect
	ist ein => Raster mit rechteckigen => Pixel[n].

Redundanz: #BV1
	einer Kodierung individueller => Pixel ist $r = b - H$, mit => Entropie $H$ und die
	Anzahl der Bits pro Pixel $b$.

Regionen: #BV1 !regions
	können mithilfe der Dekomposition von => Histogramm[en] ermittelt werden. Ähnliche
	„Hügel“ im => RGB[-Histogramm] lassen auf eine Region schließen. Eine andere
	Möglichkeit ist das Nutzen von Split-and-Merge, wobei Regionsgrenzen anhand von
	=> Quadtree[-Grenzen] untersucht werden.

Rekonstruktion einer Bildfunktion von Aufnahmen: #BV1 !sitfunc
	kann mithilfe einer Abtastfunktion $s_i(t)$ durchgeführt werden.

Rekonstruktion und Interpretation: #BV1
	sind Computer-interne Beschreibungen einer => Szene.

Relational Models: #BV1
	werden verwendet, um => Objekte zu beschreiben, basierend auf einzelnen Teilen. Für
	die Objekterkennung werden dann erst diese Modelle aufgestellt, eine Beschreibung
	des Bildes angefertigt und ein R-Morphismus berechnet, um zu prüfen, ob die relationalen
	Modelle sich innerhalb des Bildmodells befinden. Die Modelle können auch für verschiedene
	Sichten eines Objekts herhalten, allerdings ist dies nicht unbedingt möglich wenn
	sich die Form in der Tiefe verändert (zum Beispiel bei Dingen, die im Weltall betrachtet
	werden). Der Morphismus kann berechnet werden, in dem man größte => Klique[n] findet.

RGB: 
	steht für die => Spektr{um}[en] Rot (575 nm), Grün (535 nm) und Blau (445 nm),
	es ist außerdem ein => Farbmodell{e}.

Robert's Cross-Operator: #IVC #BV1 !roberts
	berechnet die => Steigung auf Basis einer kreuzweisen Grauwert-Differenz-Rechnung.<p/>Differenz
	$\delta_1 = g_{i j} - g_{i-1 j-1}$<p/>Differenz $\delta_2 = g_{i j-1} - g_{i-1 j}$<p/>Magnitude
	$|\nabla g_{ij}| = \sqrt{\delta_1^2 + \delta_2^2}$<p/>Winkel $\sphericalangle g_{ij}
	= \arctan2(\delta_1, \delta_2)$

Rotation: !rot
	Rotation über Z-Achse: *kippen* (tilt), mit *Roll*-Winkel (roll). <p/> Rotation
	über Y-Achse: *schwenken* (pan), mit *Nick*-Winkel (pitch). <p/> Rotation über
	X-Achse: *neigen* (nick), mit *Gier*-Winkel (yaw).

Rotierende Maske: #BV1 !rotmask
	ist ein => Bimodale{ Durchschnittberechnung}[r Durchschnittberechnungsalgorithmus].
	Es werden Durchschnittsmasken in alle möglichen Richtungen um einen => Pixel gelegt
	und die Dispersion (sprich: die => {Empirische }Varianz) bestimmt. Die Maske mit
	der niedrigsten Dispersion gewinnt und deren Durchschnitt wird als Wert dem Pixel
	zugewiesen.

Run-Length Encoding: => Lauflängenkodierung
Salz-und-Pfeffer-Rauschen: #BV1 !saltandpepper
	ist ein => Rauschen welches Punkte und Linien enthält, die nicht zum eigentlichen
	Bildsignal gehören. Dies kann verursachen, dass => Objekte zusammengefügt werden,
	die eigentlich hätten getrennt werden sollen. Eine Lösung stellen => {Morphologische
	Operationen} dar.

Sampling: => Abtasten
Schachbrett-Distanz: #Math #BV1
	$D_8((i,j),(h,k)) = \max\{|i - h|, |j - k|\}$, => Manhattan-Distanz wenn diagonale
	Schritte erlaubt sind. Siehe => 8-Nachbarschaft.

Schärfen: #BV1 !sharpening
	erhöht die Abweichungen der Pixel zueinander.

Scharr-Operator: #BV1 #IVC
	ist ein => Gradientenoperator. Er stellt eine Weiterentwicklung des => Sobel-Operator[s]
	mit genaueren Koeffizienten dar.

Scharzweiß-Bild: => Binärbild
Schattierung: #BV1
	ist der Grauwert eines => Pixel[s], welchen dieser einnimmt, um

Scherung: #BV1 #IVC !skewing
	ist eine => Koordinaten-Transformation{en} für das Verziehen eines Objekts in eine
	X-, Y- oder Z-Richtung.

Schwarz-Weiß-Bild: => Binärbild
Schwellwert: #Math
	bezeichnet einen bestimmten Wert, der für ein Verfahren mindestens erreicht werden
	muss, um einen Effekt/Fall auszulösen. => Perzeptron[e] basieren sehr darauf.

Shading: => Schattierung
Shannons Abtasttheorem: #BV1 #IVC
	„Eine bandlimitierte Funktion mit => Bandbreite $W$ kann genau dann exakt rekonstruiert
	werden, wenn die Abtastdistanz nicht größer ist als $1/(2W)$.“; siehe => Fourier-Dekomposition
	eines Signals. Das Theorem kann auf 2D erweitert werden (mit Bandbreite $W_x$ und
	$W_y$).

Shape-from-Shading: #BV1
	nicht abgeprüft. Welches Model gibt es in der Welt? ist ein Verfahren um eine Höhenkarte
	oder eine Form anhand einer Schattierung zu erhalten.

Shape-preserving Sampling Theorem: => Form-konservierendes Abtasttheorem
Skalierung: #BV1 #IVC
	ist eine => Koordinaten-Transformation{en} für das Vergrößern oder Verkleinern
	eines Objekts in X-, Y- und Z-Richtung.

Skewing: => Scherung
Slit Illumination: #BV1 #IVC !slitillu
	ist ein Verfahren zur => Binarisieren bei welchem auf einem Förderband sich ein
	zu scannendes Objekt befindet. Dieses wird von einer Spaltlampe beleuchtet. Die Reflektionen
	werden von einer Kamera aufgezeichnet und ausgewertet.

Slope: => Steigung
Sobel-Operator: #IVC #BV1 !sobel
	berechnet die => Steigung auf Basis einer 3×3-Nachbarschaft.<p/>Differenz $\delta_y
	= g_1 + 2g_2 + g_3 - g_5 - 2g_6 - g_7$<p/>Differenz $\delta_x = g_1 + 2g_0 + g_7
	- g_3 - 2g_4 - g_5$<p/>Magnitude $|\nabla g_{ij}| = \sqrt{\delta_y^2 + \delta_x^2}$<p/>Winkel
	$\sphericalangle g_{ij} = \arctan2(\delta_y, \delta_x)$

Spaltlampenverfahren: => Slit Illumination
Spatial Domain: => Raumdomäne
Spektrale Bildeigenschaften: #BV1 !sip
	sind Mengen von Frequenzen, welche die Magnituden der räumlichen Frequenzen eines
	=> Bild[es] aufdecken. Wichtige Eigenschaften sind, dass sie *unabhängig von der
	Position im Bild* sind, *scharfe Kanten hohe Frequenzen* aufweisen und => Rauschen
	oftmals hohe Frequenzen darstellt.

Spektrum: !spektrum
	ein bestimmter Farbkanal, also etwa „Rot“ oder eine andere Farbe, „Weiß“,
	„Schwarz“ oder „Grau“.

Steigung: #Math
	ist der Abstand eines Signals zur nächsten Stelle. Bei einer Funktion ist dies die
	1. Ableitung.

Szene: #BV1
	ist eine Sektion der realen Welt.

Threshold: => Schwellwert
Thresholding: #BV1 !thresholding
	ist eine Methode zur => Bildsegmentierung um mittels eines => Schwellwert[s] einen
	Vordergrund vom Hintergrund zu trennen.

Tiefpassfilter: #BV1 #Wichtig !lowpass
	lässt tiefe Frequenzen durch, => {Filter}[filtert] allerdings hohe Signale weg.

Ton: #BV1
	ist ein akustisches Signal.

Translation: #BV1 #IVC
	ist eine => Koordinaten-Transformation{en} für das Verschieben eines Objekts in
	X-, Y- und Z-Richtung. Sie ist weder zur => Skalierung noch zur => Rotation => {K}[k]ommutativ{gesetz}.

Treppeneffekt: #BV1 #IVC !aliasing
	tritt auf, wenn ein Bild mit zu wenig Aufnahmen rekonstruiert wird. Dies ist dann
	der Fall, wenn => {Shannons Abtasttheorem} verletzt wird.

Trianguläre Raster: #BV1 !triang
	ist ein => Raster mit dreieckigen => Pixel[n].

Varianz: => Empirische Varianz
Verlustbehaftete Kompression: #BV1
	ist zum Beispiel => JPEG.

Verlustfreie Kompression: #BV1
	ist zum Beispiel => Lauflängen[-]{kodierung} und => Huffman-Kodierung.

Video: #BV1 #IVC
	ist ein bewegtes => Bild, also eine zeitliche Aneinandereihung eines Bildes.

Voxel: #BV1 #IVC
	ist eine Rasterelement eines gerasterten Volumens (Volume Cell), also ein 3D-=> Pixel.

Wahrscheinlichkeitsdichte: #Math
	ist ein Hilfsmittel zur Beschreibung einer stetigen Wahrscheinlichkeitsverteilung.
	Sehr populär ist die => {Gauß'sche Wahrscheinlichkeitsdichte}.

Wasserscheiden-Segmentation: #BV1 !watershed
	simuliert das Bild als topografische 3D-Landkarte, welche mit Wasser geflutet wird.
	Es werden sich die Stellen gemerkt an denen zwei Wasserbasins zusammenwachsen (den
	Wasserscheiden).

YUV: #BV1
	ist das bei => JPEG verwendete => Farbmodell{e}, bestehend aus => Helligkeit (16
	Bit), Röte und Bläue (jeweils 8 Bit).

Zeitliche Quantisierung: #BV1
	ist die => Quantisierung, bei der Grauwerte in => {Diskretisierung}[diskreten] Zeitabständen
	genommen werden.

Abtasten: #BV1 #IVC
Additive Farbmischung: #IVC
Affine Koordinaten-Transformationen: #IVC
Basic Interpretation Algorithm: #BV1 #Wichtig
Basic Pattern Recognition: #BV1 #Wichtig
Bayes Classification: #BV1 #Wichtig
Bidirektionale Reflektanz-Verteilungs-Funktion (BRDF): !brdf
Binärbild: #BV1 #IVC
Eigenvector-Analysis: #BV1 #Wichtig
Feature Space: #BV1 #Wichtig
Flat-Shading: #IVC
Foo: 
Fourier-Dekomposition: #IVC #BV1
Generality Assumption: #BV1 #Wichtig
General Model vs. Appearance Model: #BV1 #Wichtig
Gouraud-Shading: #IVC
Grouping: #BV1 #Wichtig
Händigkeit: #IVC
Kantenerkennung: #BV1 #IVC #Wichtig
Korrespondenzproblem: #BV1 #IVC #Wichtig
Lochkamera: #IVC
Mehrdeutige Sensor-Antwort: !mehrsensorantwort
Motion Tracking: #IVC #BV1
Normalenvektor: #IVC #Math
Objekte: #BV1
Objekterkennung: #BV1
Objektlokalisierung: #BV1
Octree: #IVC #BV1
Optical Flow Constraint Equation: #BV1 #Wichtig
Parallelprojektion: #IVC
Perceptron Learning Rule: #BV1 #Wichtig
Perzeptron: #BV1
Phong-Shading: #IVC
Projektionsmatrix: #IVC
Simple 2D Shape Features: #BV1 #Wichtig
Statistical Decision Theory: #BV1 #Wichtig
Subtraktive Farbmischung: #IVC
Supervised Learning: #BV1 #Wichtig
Szeneninterpretation: 
Weight Space: #BV1 #Wichtig
Zentralprojektion: #IVC
